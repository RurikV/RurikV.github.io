@import './variables';

// Function to get theme value
@function theme-get($key, $theme: $current-theme) {
  @return map-get($theme, $key);
}

// Mixin to apply light theme
@mixin light-theme {
  $current-theme: $light-theme !global;
  
  // Apply light theme colors
  background-color: theme-get(color-bg-primary);
  color: theme-get(color-text-primary);
  
  @content;
}

// Mixin to apply dark theme
@mixin dark-theme {
  $current-theme: $dark-theme !global;
  
  // Apply dark theme colors
  background-color: theme-get(color-bg-primary);
  color: theme-get(color-text-primary);
  
  @content;
}

// Mixin to create theme-aware styles
@mixin themed($property, $key) {
  #{$property}: theme-get($key);
  
  [data-theme="light"] & {
    #{$property}: map-get($light-theme, $key);
  }
  
  [data-theme="dark"] & {
    #{$property}: map-get($dark-theme, $key);
  }
}

// Mixin for theme-specific styles
@mixin theme-styles($theme-name) {
  [data-theme="#{$theme-name}"] & {
    @if $theme-name == "light" {
      $current-theme: $light-theme !global;
    } @else if $theme-name == "dark" {
      $current-theme: $dark-theme !global;
    }
    
    @content;
  }
}